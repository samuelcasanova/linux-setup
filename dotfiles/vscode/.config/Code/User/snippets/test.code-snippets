{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"describe": {
		"scope": "javascript,typescript",
		"prefix": "describe",
		"body": [
			"describe('$1', () => {",
			"    $0",
			"});",
		],
		"description": "Creates a describe block for a test"
	},
	"beforeAll": {
		"scope": "javascript,typescript",
		"prefix": "beforeAll",
		"body": [
			"beforeAll(() => {",
			"    $0",
			"});",
		],
		"description": "Creates a beforeAll block for a test"
	},
	"beforeEach": {
		"scope": "javascript,typescript",
		"prefix": "beforeEach",
		"body": [
			"beforeEach(() => {",
			"    $0",
			"});",
		],
		"description": "Creates a beforeEach block for a test"
	},
	"afterAll": {
		"scope": "javascript,typescript",
		"prefix": "afterAll",
		"body": [
			"afterAll(() => {",
			"    $0",
			"});",
		],
		"description": "Creates a afterAll block for a test"
	},
	"afterEach": {
		"scope": "javascript,typescript",
		"prefix": "afterEach",
		"body": [
			"afterEach(() => {",
			"    $0",
			"});",
		],
		"description": "Creates a afterEach block for a test"
	},
	"test": {
		"scope": "javascript,typescript",
		"prefix": "test",
		"body": [
			"test('$1', async () => {",
			"    $0",
			"});",
		],
		"description": "Creates a test block for a test"
	},
	"it": {
		"scope": "javascript,typescript",
		"prefix": "it",
		"body": [
			"it('$1', async () => {",
			"    $0",
			"});",
		],
		"description": "Creates a it block for a test"
	},
	"testeach": {
		"scope": "javascript,typescript",
		"prefix": "testeach",
		"body": [
			"test.each([['a',1], ['b',2]])('$1', (argA, argN) => {",
			"    $0",
			"});",
		],
		"description": "Creates a test block for a test"
	},
}